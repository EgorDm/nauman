# configuration file for git-cliff (0.1.0)

[changelog]
# changelog header
header = """
# Changelog
"""
# template for the changelog body
# https://tera.netlify.app/docs/#introduction
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}\
        {% for line in commit.message | trim | split(pat="\n") %}\
            - {{ line | trim | upper_first }}
        {% endfor %}\
    {% endfor %}\
{% endfor %}\n
"""
# remove the leading and trailing whitespaces from the template
trim = true
# changelog footer
footer = """
"""

[git]
# allow only conventional commits
# https://www.conventionalcommits.org
conventional_commits = false
# regex for parsing and grouping commits
commit_parsers = [
    { message = "^\\[FEATURE\\]", group = "Features"},
    { message = "^\\[BUGFIX\\]", group = "Bug Fixes"},
    { message = "^\\[(DOCS|Docs)\\]", group = "Documentation"},
    { message = "^\\[CI\\]", group = "Continuous Integration"},
    { message = "^\\[TESTS\\]", group = "Testing"},
    { message = "^\\[CHORE\\]", group = "Miscellaneous Tasks"},
    { message = "^Merge", skip = true},
    { message = ".*", group = "Other", default_scope = "other"},
]
# filter out the commits that are not matched by commit parsers
filter_commits = false
# glob pattern for matching git tags
tag_pattern = "[0-9]*"
# regex for skipping tags
skip_tags = "v0.1.0-beta.1"
# regex for ignoring tags
ignore_tags = ""
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "newest"
